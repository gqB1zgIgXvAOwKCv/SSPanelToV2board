<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ojbk.mappers.AnnouncementMapper">
  <resultMap id="BaseResultMap" type="com.ojbk.entity.Announcement">
    <!--@mbg.generated-->
    <!--@Table announcement-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="markdown" jdbcType="LONGVARCHAR" property="markdown" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `date`, content, markdown
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update announcement
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="`date` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.date,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="content = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.content,jdbcType=LONGVARCHAR}
        </foreach>
      </trim>
      <trim prefix="markdown = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.markdown,jdbcType=LONGVARCHAR}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update announcement
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="`date` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.date != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.date,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="content = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.content != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.content,jdbcType=LONGVARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="markdown = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.markdown != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.markdown,jdbcType=LONGVARCHAR}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into announcement
    (`date`, content, markdown)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.date,jdbcType=TIMESTAMP}, #{item.content,jdbcType=LONGVARCHAR}, #{item.markdown,jdbcType=LONGVARCHAR}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.ojbk.entity.Announcement" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into announcement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      `date`,
      content,
      markdown,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{date,jdbcType=TIMESTAMP},
      #{content,jdbcType=LONGVARCHAR},
      #{markdown,jdbcType=LONGVARCHAR},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      `date` = #{date,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR},
      markdown = #{markdown,jdbcType=LONGVARCHAR},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.ojbk.entity.Announcement" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into announcement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="date != null">
        `date`,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="markdown != null">
        markdown,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="markdown != null">
        #{markdown,jdbcType=LONGVARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        `date` = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="markdown != null">
        markdown = #{markdown,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
</mapper>