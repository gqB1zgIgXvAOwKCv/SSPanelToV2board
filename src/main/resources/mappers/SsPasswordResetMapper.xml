<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ojbk.mappers.SsPasswordResetMapper">
  <resultMap id="BaseResultMap" type="com.ojbk.entity.SsPasswordReset">
    <!--@mbg.generated-->
    <!--@Table ss_password_reset-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="init_time" jdbcType="INTEGER" property="initTime" />
    <result column="expire_time" jdbcType="INTEGER" property="expireTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, email, token, init_time, expire_time
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ss_password_reset
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="email = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.email,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="token = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.token,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="init_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.initTime,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="expire_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.expireTime,jdbcType=INTEGER}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ss_password_reset
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="email = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.email != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.email,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="token = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.token != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.token,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="init_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.initTime != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.initTime,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="expire_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.expireTime != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.expireTime,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ss_password_reset
    (email, token, init_time, expire_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.email,jdbcType=VARCHAR}, #{item.token,jdbcType=VARCHAR}, #{item.initTime,jdbcType=INTEGER}, 
        #{item.expireTime,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.ojbk.entity.SsPasswordReset" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ss_password_reset
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      email,
      token,
      init_time,
      expire_time,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{email,jdbcType=VARCHAR},
      #{token,jdbcType=VARCHAR},
      #{initTime,jdbcType=INTEGER},
      #{expireTime,jdbcType=INTEGER},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      email = #{email,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      init_time = #{initTime,jdbcType=INTEGER},
      expire_time = #{expireTime,jdbcType=INTEGER},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.ojbk.entity.SsPasswordReset" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ss_password_reset
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="initTime != null">
        init_time,
      </if>
      <if test="expireTime != null">
        expire_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="initTime != null">
        #{initTime,jdbcType=INTEGER},
      </if>
      <if test="expireTime != null">
        #{expireTime,jdbcType=INTEGER},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="initTime != null">
        init_time = #{initTime,jdbcType=INTEGER},
      </if>
      <if test="expireTime != null">
        expire_time = #{expireTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
</mapper>